{"version":3,"file":"miniapp-spore.js","sources":["../src/event.js","../src/platforms/aliLifeCycles.js","../src/platforms/index.js","../src/platforms/wxLifeCycles.js","../src/core.js","../src/diff.js","../src/index.js","../src/plugins/onBack.plugin.js","../src/plugins/store.plugin.js","../src/plugins/props.plugin.js"],"sourcesContent":["function Event(all) {\r\n\tall = all || Object.create(null);\r\n\r\n\tconst e = {\r\n\t\t/**\r\n\t\t * 注册\r\n\t\t *\r\n\t\t * @param  {String} type\t事件名 `\"*\"` 代表全部\r\n\t\t * @param  {Function} handler 方法\r\n\t\t */\r\n\t\ton: function on(type, handler) {\r\n\t\t\t(all[type] || (all[type] = [])).push(handler);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 移出\r\n\t\t *\r\n\t\t * @param  {String} type\t事件名 `\"*\"` 代表全部\r\n\t\t * @param  {Function} handler 移出的方法\r\n\t\t */\r\n\t\toff: function off(type, handler) {\r\n\t\t\tif (all[type]) {\r\n\t\t\t\tif(arguments.length == 1){\r\n\t\t\t\t\tall[type] = []\r\n\t\t\t\t}else{\r\n\t\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 触发\r\n\t\t *\r\n\t\t * @param {String} type  触发事件名\r\n\t\t * @param {Any} [args]  额外进入方法的参数\r\n\t\t * @param {object} [context]  this指向的上下文\r\n\t\t */\r\n\t\temit: function emit(type, args=[], context) {\r\n\t\t\tlet tps = (all[type] || []).slice().map(function (handler) { return handler.apply(context, args); });\r\n\t\t\tlet aps = (all['*'] || []).slice().map(function (handler) { return handler.apply(context, [...args, type]); });\r\n\t\t\treturn [...tps, ...aps];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 同步触发\r\n\t\t *\r\n\t\t * @param {String} type  触发事件名\r\n\t\t * @param {Any} [args]  额外进入方法的参数\r\n\t\t * @param {object} [context]  this指向的上下文\r\n\t\t */\r\n\t\tasyncEmit: function asyncEmit(type, args=[], context) {\r\n\t\t\treturn Promise.all(e.emit(type, args, context));\r\n\t\t},\r\n\t};\r\n\r\n\treturn e;\r\n}\r\n\r\nexport default Event;","export default {\r\n  App:['onLaunch','onShow','onHide','onError','onShareAppMessage'],\r\n  Page:['onLoad','onShow','onBack', 'onReady', 'onHide', 'onUnload', \r\n  'onTitleClick', 'onPullDownRefresh', 'onReachBottom', 'onShareAppMessage',\r\n  'onOptionMenuClick', 'onPullIntercept', 'onTabItemTap', 'onPageScroll'],\r\n  Component:['onInit', 'deriveDataFromProps', 'didMount', 'didUpdate', 'didUnmount']\r\n};","import aliLC from  \"./aliLifeCycles\";\r\nimport wxLC  from \"./wxLifeCycles\";\r\n\r\nexport const isWx = (typeof wx === 'object') && (typeof wx.getSystemInfoSync === 'function');\r\nexport const isMy = (typeof my === 'object') && (typeof my.getSystemInfoSync === 'function');\r\n\r\n// 生命周期\r\nlet autolifeCycles;\r\nif(isWx){\r\n  autolifeCycles = wxLC\r\n}else if(isMy){\r\n  autolifeCycles = aliLC\r\n}\r\n\r\nexport const aliLifeCycles = aliLC;\r\nexport const wxLifeCycles = wxLC;\r\nexport const lifeCycles = autolifeCycles;\r\n","export default {\r\n  App:['onLaunch','onShow','onHide','onError', 'onPageNotFound', 'onUnhandledRejection', 'onThemeChange'],\r\n  Page:['onLoad','onShow','onBack', 'onReady', 'onHide', 'onUnload', 'onPullDownRefresh', 'onReachBottom', \r\n  'onShareAppMessage', 'onShareTimeline', 'onAddToFavorites', 'onPageScroll', 'onResize', 'onTabItemTap'],\r\n  Component:['created', 'attached', 'ready', 'moved', 'detached']\r\n};","\r\nimport Event from \"./event\";\r\nimport { lifeCycles, isMy, isWx } from \"./platforms/index\";\r\nimport { version } from \"../package.json\";\r\nlet spore = Event();\r\n// let version = `${PACKAGE_VERSION}`;\r\n\r\n\r\n//polyfill\r\nif (!Object.entries){\r\n  Object.entries = function (obj) {\r\n    var ownProps = Object.keys(obj),\r\n      i = ownProps.length,\r\n      resArray = new Array(i); // preallocate the Array\r\n    while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];\r\n\r\n    return resArray;\r\n  };\r\n}\r\n\r\n// 类型检测\r\nconst type = (t) => {\r\n    return {}.toString.call(t).slice(8, -1).toLowerCase();\r\n};\r\n\r\n// 获取当前页面（注意某些情况可能为null）\r\nlet getPage = ()=> {\r\n    let curPages = getCurrentPages();\r\n    return curPages[curPages.length - 1];\r\n}\r\n// 是否为页面\r\nlet isPage = (instance) => {\r\n  return instance && type(instance) == \"object\" && '__type__' in instance && instance.__type__ == 'Page';\r\n};\r\n// 是否为组件\r\nlet isComponent = (instance) => {\r\n  return instance && type(instance) == \"object\" && !isPage(instance) && instance.is;\r\n};\r\n// 是否为App\r\nlet isApp = (instance) => {\r\n  return instance == getApp();\r\n};\r\n\r\nObject.assign(spore, {\r\n  type,\r\n  isPage,\r\n  isComponent,\r\n  isApp,\r\n  isMy,\r\n  isWx,\r\n  getPage,\r\n  Event,\r\n  version\r\n});\r\n\r\n\r\n\r\n// 事件监听\r\nlet listen = function(type, config){\r\n  spore.emit(`${type}.init`, [config])\r\n  lifeCycles[type].forEach(function(lifeCycle){\r\n    let origin = config[lifeCycle];\r\n    let fn = origin || function(){};\r\n\r\n    // lifeCycle AOP\r\n    config[lifeCycle] = async function(){\r\n      await spore.asyncEmit(`${type}.${lifeCycle}:before`, arguments, this)\r\n      await fn.apply(this, arguments);\r\n      await spore.asyncEmit(`${type}.${lifeCycle}:after`, arguments, this)\r\n    }\r\n    // 原定义的生命周期方法存入到现有生命周期的origin上方便获取\r\n    config[lifeCycle].origin = origin;\r\n  })\r\n  spore.emit(`${type}.inited`, [config])\r\n};\r\n\r\n\r\n\r\n\r\n// Hooks\r\nlet _App = App;\r\nlet _Page = Page;\r\nlet _Component = Component;\r\n\r\nApp = function(config){\r\n  listen('App', config);\r\n  config.__type__ = 'App';\r\n  return _App(config);\r\n};\r\nApp._App = _App;\r\nApp.isApp = isApp;\r\n\r\nPage = function(config){\r\n  listen('Page', config);\r\n  config.__type__ = 'Page';\r\n  return _Page(config);\r\n};\r\nPage._Page = _Page;\r\nPage.isPage = isPage;\r\n\r\nComponent = function(config){\r\n  listen('Component', config);\r\n  config.__type__ = 'Component';\r\n  return _Component(config);\r\n};\r\nComponent._Component = _Component;\r\nComponent.isComponent = isComponent;\r\n\r\n\r\n\r\n// 插件install\r\nlet plugins = new Set();\r\n\r\nspore.use = function(plugin, options){\r\n  plugin.options = options;\r\n  plugins.add(plugin)\r\n  const { install } = plugin.bind(spore)(spore, options)\r\n  install()\r\n};\r\nspore.plugins = plugins;\r\nspore.lifeCycles = lifeCycles;\r\n\r\n\r\nconsole && console.info(`miniapp-spore: v${version}`)\r\n\r\nexport default spore;","const ARRAYTYPE = '[object Array]'\r\nconst OBJECTTYPE = '[object Object]'\r\nconst FUNCTIONTYPE = '[object Function]'\r\n\r\n//thanks:\r\n//https://github.com/yisar/fard/blob/master/packages/fard/index.js\r\n//https://github.com/linjc/dd-store/blob/master/src/create.js\r\n//https://github.com/Tencent/westore/blob/master/packages/westore/utils/diff.js\r\n\r\nfunction type(obj) {\r\n    return Object.prototype.toString.call(obj)\r\n}\r\n\r\nfunction deepCopy(data) {\r\n  const typeStr = type(data)\r\n  if (typeStr === OBJECTTYPE) {\r\n    const obj = {}\r\n    Object.keys(data).forEach(key => obj[key] = deepCopy(data[key]))\r\n    return obj\r\n  }\r\n  if (typeStr === ARRAYTYPE) {\r\n    const arr = []\r\n    data.forEach((item, index) => arr[index] = deepCopy(item))\r\n    return arr\r\n  }\r\n  return data\r\n}\r\n\r\nexport default function diff(current, pre) {\r\n    const result = {}\r\n    if(type(current) == OBJECTTYPE){\r\n        current = deepCopy(current);\r\n    }\r\n    syncKeys(current, pre)\r\n    _diff(current, pre, '', result)\r\n    return result\r\n}\r\n\r\ndiff.deepCopy = deepCopy;\r\n\r\nfunction syncKeys(current, pre) {\r\n    if (current === pre) return\r\n    const rootCurrentType = type(current)\r\n    const rootPreType = type(pre)\r\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\r\n        //if(Object.keys(current).length >= Object.keys(pre).length){\r\n            for (let key in pre) {\r\n                const currentValue = current[key]\r\n                if (currentValue === undefined) {\r\n                    current[key] = null\r\n                } else {\r\n                    syncKeys(currentValue, pre[key])\r\n                }\r\n            }\r\n        //}\r\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\r\n        if (current.length >= pre.length) {\r\n            pre.forEach((item, index) => {\r\n                syncKeys(current[index], item)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction _diff(current, pre, path, result) {\r\n    if (current === pre) return\r\n    const rootCurrentType = type(current)\r\n    const rootPreType = type(pre)\r\n    if (rootCurrentType == OBJECTTYPE) {\r\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\r\n            setResult(result, path, current)\r\n        } else {\r\n            for (let key in current) {\r\n                const currentValue = current[key]\r\n                const preValue = pre[key]\r\n                const currentType = type(currentValue)\r\n                const preType = type(preValue)\r\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\r\n                    if (currentValue != pre[key]) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    }\r\n                } else if (currentType == ARRAYTYPE) {\r\n                    if (preType != ARRAYTYPE) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    } else {\r\n                        if (currentValue.length < preValue.length) {\r\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                        } else {\r\n                            currentValue.forEach((item, index) => {\r\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result)\r\n                            })\r\n                        }\r\n                    }\r\n                } else if (currentType == OBJECTTYPE) {\r\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    } else {\r\n                        for (let subKey in currentValue) {\r\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else if (rootCurrentType == ARRAYTYPE) {\r\n        if (rootPreType != ARRAYTYPE) {\r\n            setResult(result, path, current)\r\n        } else {\r\n            if (current.length < pre.length) {\r\n                setResult(result, path, current)\r\n            } else {\r\n                current.forEach((item, index) => {\r\n                    _diff(item, pre[index], path + '[' + index + ']', result)\r\n                })\r\n            }\r\n        }\r\n    } else {\r\n        setResult(result, path, current)\r\n    }\r\n}\r\n\r\nfunction setResult(result, k, v) {\r\n    if (type(v) != FUNCTIONTYPE) {\r\n        result[k] = v\r\n    }\r\n}\r\n\r\n","import spore from \"./core\";\r\nimport onBackPlugin from \"./plugins/onBack.plugin\";\r\nimport storePlugin from \"./plugins/store.plugin\";\r\nimport propsPlugin from \"./plugins/props.plugin\";\r\n\r\nspore.use(onBackPlugin);\r\n\r\nspore.use(storePlugin);\r\n\r\nif(spore.isMy){\r\n  spore.use(propsPlugin);\r\n}\r\n\r\n\r\nexport default spore;","\r\n\r\n// 页面返回生命周期插件\r\nexport default function(spore, options){\r\n  return {\r\n    install(){\r\n      // 已加载\r\n      spore.on('Page.onLoad:before', function(){\r\n        setTimeout(() => {\r\n          this._loaded = true;\r\n        }, 10);\r\n      });\r\n      // 页面返回生命周期\r\n      spore.on('Page.onShow:after', function(){\r\n        if(this._loaded && this.onBack){\r\n          this.onBack();\r\n        }\r\n      });\r\n    }\r\n  };\r\n};","import diff from \"../diff\";\r\n\r\n\r\n// 全局存储插件\r\nexport default function(spore, options){\r\n\r\n\r\n// 深度复制\r\nconst deepCopy = diff.deepCopy;\r\n\r\nconst { Event, type, isComponent, isPage } = spore;\r\n\r\n// 去除右侧方括号]\r\nconst trimRightBracket = k=>k.replace(/\\]$/g,'');\r\n\r\n\r\n\r\n// 路径设对象值\r\nconst setByPath = function (data, path, value) {\r\n    let p = Array.isArray(path) ? path : path.split(/\\.|\\[/);\r\n    if (path && p.length > 1) {\r\n        let k = trimRightBracket(p.shift());\r\n        data = data[k] || (data[k] = p[0] !== trimRightBracket(p[0]) ? [] : {});\r\n        return setByPath(data, p, value);\r\n    } else {\r\n        data[trimRightBracket(p[0])] = value;\r\n        return data;\r\n    }\r\n};\r\n// 路径取对象值\r\nconst getByPath = function (data, path) {\r\n  let p = Array.isArray(path) ? path : path.split(/\\.|\\[/);\r\n  if (path && p.length) {\r\n      let k = trimRightBracket(p.shift());\r\n      if (typeof data != \"object\" || !data || !(k in data)) {\r\n          return;\r\n      }\r\n      return getByPath(data[k], p);\r\n  } else {\r\n      return data;\r\n  }\r\n};\r\n// 路径定义对象值\r\nconst defByPath = function (data, path, define={}) {\r\n    let p = Array.isArray(path) ? path : path.split(/\\.|\\[/);\r\n    let key, obj;\r\n\r\n    if(p.length>1){\r\n        key = p.splice(-1)[0];\r\n        obj = getByPath(data, p);\r\n    }else{\r\n        key = p[0]\r\n        obj = data;\r\n    }\r\n    key = trimRightBracket(key);\r\n\r\n    if(typeof obj == 'object'){\r\n        return Object.defineProperty(obj, key, define);\r\n    }\r\n};\r\n\r\n\r\n// 全局存储对象列表\r\nconst storesList = new Set();\r\n\r\n// 存储对象\r\nclass Store{\r\n\r\n  //public  data getter获取 _data\r\n  \r\n  //private _defineData 定义的数据\r\n\r\n  //private _data  暴露使用的数据\r\n\r\n  constructor(namespace='$store', data = {}, options = {}){\r\n\r\n    // 验证命名空间合法性\r\n    if(!/^[_\\$a-zA-Z][_\\$a-zA-Z0-9]*$/.test(namespace)){\r\n      throw new Error(`Store命名空间${namespace}定义不合法，规则与js变量名一致`)\r\n      return;\r\n    }\r\n    this.namespace = namespace;\r\n\r\n    // 相同命名空间要报错\r\n    if(!Array.from(storesList).find(store=>store.namespace == namespace)){\r\n\r\n      //加入列表方便后续管理\r\n      storesList.add(this);\r\n\r\n    }else{\r\n      throw new Error(`Store不能同时使用同一个命名空间:${namespace}`)\r\n    }\r\n\r\n\r\n    // 融入事件方法 on emit 等\r\n    Object.assign(this, Event(this._events = {}));\r\n\r\n    // 融入用户定义的方法\r\n    Object.assign(this, options.actions || {});\r\n\r\n    this.options = Object.assign({diff:false}, options);\r\n\r\n    // 将data先存入_defineData然后在复制到_data\r\n    this._createDefineData(data);\r\n\r\n  }\r\n  \r\n  //设置数据\r\n  setData(update, callback){\r\n    if(type(update) != 'object'){\r\n        return\r\n    }\r\n    //更新数据根据路径进行设置\r\n    Object.entries(update).map(record=>{\r\n        setByPath(this._defineData, record[0], record[1])\r\n    })\r\n\r\n    this._data = deepCopy(this._defineData);\r\n\r\n    this.emit('setData', [update], this)\r\n    this.update(callback)\r\n  }\r\n  // 异步设置data，返回Promise\r\n  asyncSetData = asyncSetData\r\n  // 修改数组\r\n  $spliceData(update, callback){\r\n    if(type(update) != 'object'){\r\n      return\r\n    }\r\n    Object.entries(update).map(record=>{\r\n      const [key, value] = record;\r\n      let arr = getByPath(this._defineData, key);\r\n\r\n      if(Array.isArray(arr)){\r\n        [].splice.apply(arr, value)\r\n      }\r\n    })\r\n\r\n    this._data = deepCopy(this._defineData);\r\n\r\n    this.emit('$spliceData', [update], this)\r\n    this.update(callback)\r\n  }\r\n  // 清除数据二级以下的计算属性可能会被覆盖\r\n  clear(callback){\r\n    Object.entries(this._defineData).map(record=>{\r\n      const [key, value] = record;\r\n      this._defineData[key] =  null;\r\n    })\r\n    this._data = deepCopy(this._defineData);\r\n    this.emit('clear', [], this)\r\n    this.update(callback)\r\n  }\r\n  _createDefineData(data){\r\n    //内部定义存储的data\r\n    this._defineData = data;\r\n    // 处理计算属性\r\n    this._setComputed();\r\n    //对外暴露的data\r\n    this._data = deepCopy(this._defineData);\r\n  }\r\n  // 不要直接访问 _data _defineData 字段 访问data，此字段应该只读\r\n  get data(){\r\n    return this._data;\r\n  }\r\n  //处理计算属性\r\n  _setComputed(){\r\n    let self = this;\r\n    if(this.options.computed){\r\n      Object.entries(this.options.computed).map(computedCof=>{\r\n        const [path, computedFn] = computedCof;\r\n\r\n        if(type(computedFn) == 'function'){\r\n          // 将对应路径下的对象设置getter\r\n          if(!defByPath(this._defineData, path, {\r\n            enumerable: true,\r\n            set() {\r\n              console.warn('计算属性不支持重新赋值')\r\n            },\r\n            get(){\r\n              return computedFn.bind(self._defineData)();\r\n            }\r\n          })){\r\n            console.warn(`存储【${this.namespace}】无法定义计算属性${path}，因为在此路径下不是对象类型，无法定义属性。`)\r\n          };\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  //更新、强制更新\r\n  update(callback = ()=>{}){\r\n    let page = spore.getPage();\r\n    let data = this.data;\r\n    if(page){ \r\n\r\n      let update = {\r\n        [this.namespace] : data\r\n      };\r\n\r\n      // 页面diff更新\r\n      if(this.options.diff){\r\n        update = storeDiff(data, this.namespace, page);\r\n      }\r\n      // 页面更新\r\n      let updatePromises = [ asyncSetData.bind(page)(update) ];\r\n\r\n      if(page._coms){\r\n        page._coms.forEach(com=>{\r\n          let $stores = com.getStores();\r\n          if($stores && $stores.includes(this)){\r\n            // 组件diff更新\r\n            if(this.options.diff){\r\n              update = storeDiff(data, this.namespace, com)\r\n            }\r\n            // 组件更新\r\n            updatePromises.push( asyncSetData.bind(com)(update) )\r\n          }\r\n        });\r\n      }\r\n\r\n      return Promise.all(updatePromises).then(()=>{ callback(data); return data;});\r\n    }\r\n    return Promise.resolve(data);\r\n  }\r\n  //返回哪些页面/组件在使用\r\n  where(){\r\n    let page = spore.getPage();\r\n    let res = [];\r\n    if(page){\r\n\r\n      // 页面route加入结果\r\n      res.push(page.route);\r\n      \r\n      if(page._coms){\r\n        page._coms.forEach(com=>{\r\n          let $stores = com.getStores();\r\n          if($stores && $stores.includes(this)){\r\n            // 组件is加入结果\r\n            res.push(com.is);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  // 销毁\r\n  destroy(clear){\r\n    storesList.delete(this);\r\n    this._data = {};\r\n    this._defineData = {};\r\n    if(clear){\r\n      this.clear();\r\n    }\r\n    // 成员方法全部置为报错的空方法\r\n    ['$spliceData','setData','clear',\r\n    'asyncSetData','_setComputed',\r\n    'update','where','destroy'].forEach(fnName=>{\r\n      this[fnName] = ()=>{throw new Error(`Store:[${this.namespace}]已销毁`)}\r\n    });\r\n    this.emit('destroy', [], this)\r\n  }\r\n}\r\n\r\n// 同步setData 支持页面/组件/Store\r\nlet asyncSetData = function (data) {\r\n    if (isComponent(this) || isPage(this) || isStore(this)) {\r\n        return new Promise((r) => {\r\n            this.setData(data, (data) => {\r\n                r(data);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// store存储data与对应页面/组件data下数据对比出差异\r\nlet storeDiff = function (data, namespace, instance){\r\n  \r\n  let diffUpdates = diff(data, instance.data[namespace]);\r\n  \r\n  let namespaceDiffUpdates = {};\r\n\r\n  Object.entries(diffUpdates).forEach(diffUpdate=>{\r\n    namespaceDiffUpdates[`${namespace}.${diffUpdate[0]}`] = diffUpdate[1];\r\n  })\r\n\r\n  return namespaceDiffUpdates;\r\n}\r\n\r\n// 是否为Store类的实例\r\nlet isStore = (instance) =>{\r\n  return instance && instance instanceof Store;\r\n}\r\n\r\n\r\n//生命周期别名，以阿里系为基准，微信对应为别名\r\nlet ali = {\r\n  'Component.didMount': 'Component.didMount',\r\n  'Component.didUnmount' : 'Component.didUnmount',\r\n  'Page.onBack': 'Page.onBack',\r\n  'Page.onLoad': 'Page.onLoad',\r\n}\r\nlet wx = {\r\n  'Component.didMount': 'Component.attached',\r\n  'Component.didUnmount' : 'Component.detached',\r\n  'Page.onBack': 'Page.onBack',\r\n  'Page.onLoad': 'Page.onLoad',\r\n};\r\n\r\nlet lifeCyclesAlias = spore.isWx ? wx : ali;\r\n\r\n\r\n\r\n  return {\r\n\r\n    install(){\r\n\r\n      \r\n      Store.isStore = isStore;\r\n\r\n      // 页面组件实例存入 page._coms\r\n      spore.on( `${lifeCyclesAlias['Component.didMount']}:before`, function(){\r\n        this.$page = this.$page || spore.getPage();\r\n        this.$page._coms = this.$page._coms || new Set();\r\n        this.$page._coms.add(this);\r\n      });\r\n      spore.on(`${lifeCyclesAlias['Component.didUnmount']}:before`, function(){\r\n        this.$page = this.$page || spore.getPage();\r\n        this.$page._coms = this.$page._coms || new Set();\r\n        this.$page._coms.delete(this);\r\n      });\r\n\r\n      // 页面返回时数据更新\r\n      spore.on(`${lifeCyclesAlias['Page.onBack']}:before`, function(){\r\n        storesList.forEach(store=>{\r\n          store.update()\r\n        })\r\n      });\r\n      // 页面加载时数据更新\r\n      spore.on(`${lifeCyclesAlias['Page.onLoad']}:before`, function(){\r\n        storesList.forEach(store=>{\r\n          store.update()\r\n        })\r\n      });\r\n\r\n\r\n      // 组件初始化嵌入数据\r\n      spore.on('Component.init', function(config){\r\n        config.data = config.data || {};\r\n        config.stores = config.stores || [];\r\n        config.methods = config.methods || {};\r\n        config.methods.getStores = function(){ //$stores需要在组件方法内定义才能取到值\r\n          return config.stores;\r\n        };\r\n        config.stores.forEach(store=>{\r\n          config.data[store.namespace] = {...store.data};\r\n        });\r\n\r\n        // 组件支持asyncSetData方法\r\n        config.methods.asyncSetData = asyncSetData;\r\n      })\r\n\r\n      // 组件挂载时数据更新\r\n      spore.on( `${lifeCyclesAlias['Component.didMount']}:before`, async function(){\r\n        await Promise.all((this.getStores()||[]).map(store=>{\r\n          let data = store.data;\r\n          let update = {\r\n            [store.namespace] : data\r\n          };\r\n          // 组件diff更新\r\n          if(store.options.diff){\r\n            update = storeDiff(data, store.namespace, this)\r\n          }\r\n          return this.asyncSetData(update)\r\n        }));\r\n      })\r\n\r\n      // 页面初始化嵌入数据\r\n      spore.on('Page.init', function(config){\r\n        config.data = config.data || {};\r\n        storesList.forEach(store=>{\r\n          config.data[store.namespace] = {...store.data};\r\n        });\r\n\r\n        // 页面支持asyncSetData方法\r\n        config.asyncSetData = asyncSetData;\r\n      });\r\n\r\n\r\n      Object.assign(spore, {\r\n        Store,\r\n        asyncSetData,\r\n        isStore\r\n      });\r\n\r\n\r\n    }\r\n\r\n  }\r\n}","import diff from \"../diff\";\r\n\r\nexport default function(spore, options){\r\n\r\n /**\r\n * 路径包含匹配\r\n *\r\n * @param  {String} referPath\t参考路径\r\n * @param  {String}  pathRule     匹配规则\r\n * @return {Boolean}  参考路径是否符合在匹配规则下\r\n */\r\nlet isPathContain = (referPath, pathRule = '') => {\r\n  if (pathRule == '*') {\r\n    return true\r\n  }\r\n  let pReg = /[\\.\\[\\]]+/g;\r\n  let bracketsReg = /\\]/g;\r\n  let referPathArr = referPath.replace(bracketsReg, '').split(pReg);\r\n  let pathRuleArr = pathRule.replace(bracketsReg, '').split(pReg);\r\n\r\n  if (pathRuleArr.length > referPathArr.length) {\r\n    return false;\r\n  }\r\n  for (let index = 0; index < pathRuleArr.length; index++) {\r\n    if (pathRuleArr[index] != referPathArr[index]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n//是否为空对象\r\nlet isEmptyObject = (obj)=>{\r\n  return !Object.keys(obj || {}).length;\r\n};\r\n\r\n  return {\r\n    install(){\r\n\r\n      spore.lifeCycles.Component.push('didPropsUpdate');\r\n\r\n      // 将配置存入方法的$$config$$，在实例化后可取\r\n      spore.on('Component.init', function(config){\r\n        config.methods.$$config$$ = config;\r\n      });\r\n      \r\n      spore.on('Component.didUpdate:before', function(prevProps, prevData){\r\n\r\n        let { didPropsUpdate, watchProps } = this.$$config$$;\r\n\r\n        // 如果didPropsUpdate和watchProps都没有配置，就不做处理\r\n        if(!didPropsUpdate.origin && (!watchProps || isEmptyObject(watchProps)) ){\r\n          return ;\r\n        }\r\n\r\n        let diffProps = diff(this.props, prevProps);\r\n\r\n         //不相等即diff为空对象时，触发didPropsUpdate 生命周期\r\n        if (!isEmptyObject(diffProps)) {\r\n\r\n          \r\n          didPropsUpdate = didPropsUpdate || function(){};\r\n          watchProps = watchProps || {};\r\n\r\n          //触发生命周期 didPropsUpdate\r\n          didPropsUpdate.bind(this)(diffProps, prevProps);\r\n\r\n          //配置的监听器\r\n          for (const path in watchProps) {\r\n            if (watchProps.hasOwnProperty(path)) {\r\n              const handler = watchProps[path];\r\n\r\n              //记录匹配\r\n              let match = {};\r\n              Object.keys(diffProps).map((key) => {\r\n                if (isPathContain(key, path)) { //当diff内的变化key包含配置的路径path（并且开头能对上）\r\n                  match[key] = diffProps[key];\r\n                }\r\n              })\r\n              //匹配上路径监听规则时\r\n              if (!isEmptyObject(match)) {\r\n                handler.bind(this)(match, prevProps)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n}"],"names":["Event","all","Object","create","e","on","type","handler","push","off","arguments","length","splice","indexOf","emit","args","context","tps","slice","map","apply","aps","asyncEmit","Promise","autolifeCycles","isWx","wx","getSystemInfoSync","isMy","my","App","Page","Component","lifeCycles","spore","entries","obj","ownProps","keys","i","resArray","Array","t","toString","call","toLowerCase","isPage","instance","__type__","isComponent","is","isApp","getApp","assign","getPage","curPages","getCurrentPages","version","listen","config","forEach","lifeCycle","origin","fn","this","_App","_Page","_Component","plugins","Set","use","plugin","options","add","install","bind","console","info","ARRAYTYPE","OBJECTTYPE","prototype","deepCopy","data","typeStr","key","arr","item","index","diff","current","pre","result","syncKeys","rootCurrentType","rootPreType","currentValue","undefined","_diff","path","setResult","preValue","currentType","preType","subKey","k","v","setTimeout","_this","_loaded","onBack","trimRightBracket","replace","getByPath","p","isArray","split","shift","storesList","Store","namespace","asyncSetData","test","Error","from","find","store","_events","actions","_createDefineData","setData","update","callback","record","setByPath","value","_defineData","_data","$spliceData","_this2","clear","_this3","_setComputed","self","computed","computedCof","computedFn","define","defineProperty","defByPath","_this4","enumerable","set","warn","get","page","storeDiff","updatePromises","_coms","com","$stores","getStores","includes","_this5","then","resolve","where","res","route","_this6","destroy","delete","fnName","_this7","isStore","r","_this8","diffUpdates","namespaceDiffUpdates","diffUpdate","lifeCyclesAlias","Component.didMount","Component.didUnmount","Page.onBack","Page.onLoad","$page","stores","methods","_this10","isEmptyObject","$$config$$","prevProps","prevData","didPropsUpdate","watchProps","diffProps","props","hasOwnProperty","match","referPath","pathRule","pReg","bracketsReg","referPathArr","pathRuleArr","isPathContain"],"mappings":"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"}